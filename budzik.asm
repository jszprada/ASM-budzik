LED EQU P1.7
;********* Ustawienie TIMERów *********
;TIMER 0
T0_G EQU 0 ;GATE
T0_C EQU 0 ;COUNTER/-TIMER
T0_M EQU 1 ;MODE (0..3)
TIM0 EQU T0_M+T0_C*4+T0_G*8
;TIMER 1
T1_G EQU 0 ;GATE
T1_C EQU 0 ;COUNTER/-TIMER
T1_M EQU 0 ;MODE (0..3)
TIM1 EQU T1_M+T1_C*4+T1_G*8
TMOD_SET EQU TIM0+TIM1*16
;50[ms] = 50 000[ŠS]*(11.0592[MHz]/12) =
; = 46 080 cykli = 180 * 256
TH0_SET EQU 256-180
TL0_SET EQU 0
;**************************************
	LJMP START
	ORG 100H

PRINT_ONE:
	MOV B, #10
	MOV A, R1
	DIV AB
	SWAP A
	ADD A, B
	LCALL WRITE_HEX
	RET	


WPROWADZ:
	CLR RS0
	CLR RS1
	LCALL WAIT_KEY ; Wczytaj liczbę dziesiątek
	MOV R1, A
	LCALL PRINT_ONE;WYSWIETL JEDNA CYFRE
	MOV A, R1
	MOV B,#10 ; pomnóż
	MUL AB ; przez 10
	MOV R1,A ; zapisz liczbę w R1
	LCALL WAIT_KEY ;wczytaj liczbę jedności
	ADD A,R1 ; dodaj liczbę jedności do R1
	RET ; wyjdź z podprogramu. Wynik w A.
	
	
SPR_MINUTY:;SPRAWDZA CZY MINUTY SA TAKIE SAME JAK USTAWIONE W ALARMIE
	CLR RS0
	SETB RS1
	MOV A, R6
	SUBB A, R3
	JZ SPR_GODZINE
	RET
SPR_GODZINE:;SPRAWDZA CZY GODZINY SA TAKIE SAME JAK USTAWIONE W ALARMIE
	CLR RS0
	CLR RS1
	MOV A, R6
	SUBB A, R3
	JZ ALARM
	RET
ALARM:
	MOV R5, #5;WARTOSC DZIESIETNA W R5, USTAWIA ILE SEKUND MA DZIALAC ALARM
	RET
ZEROZEROZERO:
	MOV R6, #0;RESET GODZINY
	LCALL SPR_MINUTY;PRZEJSCIE PO POLNOCY, 00
	RET

GODZINA_INC:
	MOV R6, #0;RESET MINUT
	CLR RS0
	CLR RS1
	INC R6;ZWIEKSZA GODZINE,
	MOV A, #24
	SUBB A, R6
	JZ ZEROZEROZERO;SPRAWDZA CZY GODZINA WYSZLA POZA OKRES
	LCALL SPR_MINUTY;PRZEJSCIE MINUT 00
	RET
MINUTY_INC:
	MOV R6, #0;RESET SEKUND
	
	CLR RS0
	SETB RS1
	
	INC R6;ZWIEKSZENIE MINUT
	
	LCALL SPR_MINUTY;ZWIEKSZENIE MINUT
	
	MOV A, #60
	SUBB A, R6;SPRAWDZA CZY MINUTY WYSZLY POZA OKRES
	
	JZ GODZINA_INC
	RET
TO_BCD_ALARM:
	MOV B, #10
	MOV A, R3
	DIV AB
	SWAP A
	ADD A, B
	LCALL WRITE_HEX
	RET
ZEGAR_INC:
	SETB RS1
	SETB RS0
	INC R6;ZWIEKSZA SEKUNDY,
	
	MOV A, #60
	SUBB A, R6; SPRAWDZA CZY WYSZLY POZA OKRES
	
	JZ MINUTY_INC

	RET

TO_BCD:
	MOV B, #10
	MOV A, R6
	DIV AB
	SWAP A
	ADD A, B
	LCALL WRITE_HEX
	RET	
	
START:
	LCALL LCD_INIT
	MOV TMOD,#TMOD_SET ;Timer 0 liczy czas
	MOV TH0,#TH0_SET ;Timer 0 na 50ms
	MOV TL0,#TL0_SET
	SETB TR0 ;start Timera
	LJMP WCZYTAJ


WCZYTAJ:
;BANKI R6 - ZEGAR
;BANKI R3 - ALARM

	;----------WCZYTAJ ZEGAR
	LCALL LCD_CLR

	LCALL WPROWADZ
	
	CLR RS0;GODZINA
	CLR RS1
	MOV R6,A
	LCALL LCD_CLR
	LCALL WYSWIETL_GODZINY;OSOBNO FUNKCJE ZEBY WYSWIETLALO CYFRA PO CYFRZE
	

	
	LCALL WPROWADZ
	
	CLR RS0
	SETB RS1;MINUTY 
	
	MOV R6,A
	LCALL LCD_CLR
	LCALL WYSWIETL_GODZINY
	LCALL WYSWIETL_MINUTY
	
	

	LCALL WPROWADZ
	SETB RS1
	SETB RS0;SEKUNDY
	MOV R6, A
	LCALL WYSWIETL_ZEGAR
	
	LCALL WAIT_ENTER_NW
	;-------------ALARM WCZYTAJ
	LCALL LCD_CLR

	LCALL WPROWADZ
	CLR RS0;GODZINA
	CLR RS1
	MOV R3,A
	LCALL LCD_CLR
	LCALL WYSWIETL_GODZINY_ALARM

	LCALL WPROWADZ
	CLR RS0
	SETB RS1;MINUTY 
	
	MOV R3,A
	LCALL LCD_CLR
	LCALL WYSWIETL_GODZINY_ALARM
	LCALL WYSWIETL_MINUTY_ALARM
	
	CLR RS0
	CLR RS1
	LCALL WAIT_ENTER_NW
	
	LJMP LOOP
	
LOOP:
	
	LCALL WYSWIETL_ZEGAR
	CLR RS0
	CLR RS1
	CJNE R5, #0, WLACZ_ALARM
	
	LCALL ZEGAR_INC
	
	CLR RS0
	CLR RS1
	MOV R7,#20 ;odczekaj czas 20*50ms=1s
TIME_N50:
	JNB TF0,$ ;czekaj, aż Timer 0
	;odliczy 50ms
	MOV TH0,#TH0_SET ;TH0 na 50ms
	CLR TF0 ;zerowanie flagi timera 0
	DJNZ R7,TIME_N50 ;odczekanie N*50ms
	SJMP LOOP

WLACZ_ALARM:

	CLR LED
	CLR P1.5

	SETB RS1
	SETB RS0
	INC R6;NA CZAS DZIALANIA WLACZ_ALARM, SEKUNDY SIE NIE ZWIEKSZAJA POPRZEZ ZEGAR_INC
	LCALL WYSWIETL_ZEGAR
	CLR RS0
	CLR RS1
	MOV R7, #20
	DJNZ R5, TIME_N50;DEKREMENTUJE R5 CO 1s, JESLI ZERO - FUNKCJA WLACZ_ALARM PRZESTAJE SIE WYWOLYWAC
	
	CPL LED
	CPL P1.5
	
	LJMP LOOP

WYSWIETL_GODZINY:
	CLR RS0
	CLR RS1

	LCALL TO_BCD
	
	MOV A, #':'
	LCALL WRITE_DATA
	RET
WYSWIETL_MINUTY:
	CLR RS0
	SETB RS1

	MOV B, #10;LCALL TO_BCD NIE WYŚWIETLA DLA MINUT?! PRZYNAJMNIEJ W EMULATORZE
	MOV A, R6
	DIV AB
	SWAP A
	ADD A, B
	LCALL WRITE_HEX
	
	MOV A, #':'
	LCALL WRITE_DATA
	RET
WYSWIETL_SEKUNDY:
	SETB RS1
	SETB RS0

	LCALL TO_BCD

	RET
	
WYSWIETL_ZEGAR:
	LCALL LCD_CLR
	LCALL WYSWIETL_GODZINY
	;LCALL WYSWIETL_MINUTY TEZ NIE DZIALA, ROBI TO SAMO CO PONIZEJ
	CLR RS0
	SETB RS1

	MOV B, #10;LCALL TO_BCD NIE WYŚWIETLA DLA MINUT?! PRZYNAJMNIEJ W EMULATORZE
	MOV A, R6
	DIV AB
	SWAP A
	ADD A, B
	LCALL WRITE_HEX
	
	MOV A, #':'
	LCALL WRITE_DATA
	LCALL WYSWIETL_SEKUNDY
	RET


WYSWIETL_GODZINY_ALARM:
	CLR RS0
	CLR RS1

	LCALL TO_BCD_ALARM
	
	MOV A, #':'
	LCALL WRITE_DATA
	RET

WYSWIETL_MINUTY_ALARM:
	CLR RS0
	SETB RS1

	MOV B, #10
	MOV A, R3
	DIV AB
	SWAP A
	ADD A, B
	LCALL WRITE_HEX
	RET